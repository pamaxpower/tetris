/* Инкапсуляция
- позволяет писать программы, чтобы в них было меньше ошибок и багов и чтобы их было легче поддерживать
- инкапсуляция помогает написать свой класс таким образом, чтобы использовать его правильно (только так, как было задумано)

Суть инкапсуляции состоит в том, что мы скрываем состояние объекта (защищаем его от внешнего использования) и даем изменить его состояние только лишь методами этого объекта

*/

// Данное орудие автоматическое, т.е. единственное, что нам от него нужно: чтобы оно стреляло
// А как в нем происходит перезарядка, нас особо не волнует
class Gun
{
    public Gun()                    // Конструктор класса
    {
        isLoaded = true;            // при создании нового объекта пушка всегда будет заряжена, тк это условие создания
    }
    public Gun(bool _isLoaded)      // конструктор с параметром выбора заряжена пушка или нет
    {
        isLoaded = _isLoaded;
    }

    private bool isLoaded;                              // Состояние пушки: она либо заряжена, либо нет
                                                        // Поведение классов (пушки) определяется методами (что она может сделать)
    private void Reload()
    {
        Console.WriteLine("Заряжаю...");
        isLoaded = true;
        System.Console.WriteLine("Заряжено!");
    }
    public void Shoot()
    {
        if (!isLoaded)
        {
            System.Console.WriteLine("Орудие не заряжено!");
            Reload();
        }
        System.Console.WriteLine("Пыщ - Пыщ \n");
        isLoaded = false;
    }
}